name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/22  # 임시 추가
  workflow_dispatch:  # 수동 트리거 추가

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Docker image
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          docker build -t zero0zone/vintage:$SHORT_SHA .

      - name: Push Docker image
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push zero0zone/vintage:$SHORT_SHA

      - name: Determine active environment # 현재 활성화된 환경을 결정
        id: determine-env
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            if sudo grep -q 'vintage-community-blue' /etc/nginx/conf.d/default.conf; then 
              export ACTIVE_ENV=blue
              export TARGET_ENV=green
            else
              export ACTIVE_ENV=green
              export TARGET_ENV=blue
            fi
            echo "ACTIVE_ENV is $ACTIVE_ENV"
            echo "TARGET_ENV is $TARGET_ENV"
            echo "::set-output name=active_env::$ACTIVE_ENV"
            echo "::set-output name=target_env::$TARGET_ENV"

      - name: Deploy to target environment
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
            TARGET_ENV=${{ steps.determine-env.outputs.target_env }}
            echo "Start pulling Docker image at $(date)"
            docker pull zero0zone/vintage:$SHORT_SHA
            echo "Finished pulling Docker image at $(date)"
            docker run -d -p 8081:8080 --name vintage-community-$TARGET_ENV zero0zone/vintage:$SHORT_SHA
            echo "ACTIVE_ENV is $ACTIVE_ENV"
            echo "TARGET_ENV is $TARGET_ENV"
            echo "::set-output name=active_env::$ACTIVE_ENV"
            echo "::set-output name=target_env::$TARGET_ENV"

      - name: Health check for target environment
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            sleep 30
            TARGET_ENV=${{ steps.determine-env.outputs.target_env }}
            if [ "$TARGET_ENV" == "blue" ]; then
              TARGET_PORT=8081
            else
              TARGET_PORT=8080
            fi
            if [ "$(curl -s -o /dev/null -w '%{http_code}' http://localhost:$TARGET_PORT)" != "200" ]; then
              echo "New version is not healthy, aborting deployment"
              docker stop vintage-community-$TARGET_ENV
              docker rm vintage-community-$TARGET_ENV
              exit 1
            fi
            echo "ACTIVE_ENV is $ACTIVE_ENV"
            echo "TARGET_ENV is $TARGET_ENV"
            echo "::set-output name=active_env::$ACTIVE_ENV"
            echo "::set-output name=target_env::$TARGET_ENV"

      - name: Switch traffic to target environment  # 트래픽을 타겟 환경으로 전환
        if: success()
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            ACTIVE_ENV=${{ steps.determine-env.outputs.active_env }}
            TARGET_ENV=${{ steps.determine-env.outputs.target_env }}
            sudo sed -i "s/vintage-community-$ACTIVE_ENV/vintage-community-$TARGET_ENV/" /etc/nginx/conf.d/default.conf
            sudo service nginx reload
            echo "ACTIVE_ENV is $ACTIVE_ENV"
            echo "TARGET_ENV is $TARGET_ENV"
            echo "::set-output name=active_env::$ACTIVE_ENV"
            echo "::set-output name=target_env::$TARGET_ENV"

      - name: Clean up inactive environment  # 비활성 환경 정리
        if: success()
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            ACTIVE_ENV=${{ steps.determine-env.outputs.active_env }}
            docker stop vintage-community-$ACTIVE_ENV || true
            docker rm vintage-community-$ACTIVE_ENV || true
            echo "ACTIVE_ENV is $ACTIVE_ENV"
            echo "TARGET_ENV is $TARGET_ENV"
            echo "::set-output name=active_env::$ACTIVE_ENV"
            echo "::set-output name=target_env::$TARGET_ENV"
